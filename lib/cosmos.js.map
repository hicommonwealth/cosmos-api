{"version":3,"file":"cosmos.js","sources":["webpack://cosmos-js/webpack/universalModuleDefinition","webpack://cosmos-js/webpack/bootstrap","webpack://cosmos-js/./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack://cosmos-js/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://cosmos-js/./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack://cosmos-js/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://cosmos-js/./node_modules/@babel/runtime/helpers/createClass.js","webpack://cosmos-js/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://cosmos-js/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://cosmos-js/./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack://cosmos-js/./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack://cosmos-js/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://cosmos-js/./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack://cosmos-js/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://cosmos-js/./node_modules/@babel/runtime/regenerator/index.js","webpack://cosmos-js/./node_modules/regenerator-runtime/runtime.js","webpack://cosmos-js/./src/getters.js","webpack://cosmos-js/./src/index.js","webpack://cosmos-js/./src/messages.js","webpack://cosmos-js/./src/send.js","webpack://cosmos-js/./src/signature.js","webpack://cosmos-js/./src/simulate.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"cosmos-js\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cosmos-js\"] = factory();\n\telse\n\t\troot[\"cosmos-js\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nmodule.exports = _nonIterableRest;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","// Modifications copyright (C) 2019 Commonwealth Labs\n'use strict';\n/* eslint-env browser */\n\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nvar RETRIES = 4;\nexport default function Getters(cosmosRESTURL) {\n  // request and retry\n  function get(_x) {\n    return _get.apply(this, arguments);\n  }\n\n  function _get() {\n    _get = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee5(path) {\n      var _ref10,\n          page,\n          limit,\n          all,\n          tries,\n          url,\n          isTxsPagination,\n          response,\n          _args5 = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _ref10 = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : {\n                page: 1,\n                limit: 30,\n                all: false\n              }, page = _ref10.page, limit = _ref10.limit, all = _ref10.all;\n              tries = _args5.length > 2 && _args5[2] !== undefined ? _args5[2] : RETRIES;\n\n            case 2:\n              if (!tries) {\n                _context5.next = 30;\n                break;\n              }\n\n              _context5.prev = 3;\n              url = cosmosRESTURL + path;\n              isTxsPagination = path.startsWith('/txs?');\n              if (isTxsPagination) url = url + \"&page=\".concat(page, \"&limit=\").concat(limit);\n              _context5.next = 9;\n              return fetch(url).then(function (res) {\n                return res.json();\n              });\n\n            case 9:\n              response = _context5.sent;\n\n              if (response) {\n                _context5.next = 12;\n                break;\n              }\n\n              throw new Error('got empty response');\n\n            case 12:\n              if (!isTxsPagination) {\n                _context5.next = 20;\n                break;\n              }\n\n              if (!(!all || Number(response.page_number) >= Number(response.page_total))) {\n                _context5.next = 15;\n                break;\n              }\n\n              return _context5.abrupt(\"return\", response.txs);\n\n            case 15:\n              _context5.t0 = response.txs;\n              _context5.next = 18;\n              return get(path, {\n                page: page + 1,\n                limit: limit,\n                all: all\n              });\n\n            case 18:\n              _context5.t1 = _context5.sent;\n              return _context5.abrupt(\"return\", _context5.t0.concat.call(_context5.t0, _context5.t1));\n\n            case 20:\n              // handle height wrappers\n              // most responses are wrapped in a construct containing height and the actual result\n              if (response.height !== undefined && response.result !== undefined) {\n                response = response.result;\n              }\n\n              return _context5.abrupt(\"return\", response);\n\n            case 24:\n              _context5.prev = 24;\n              _context5.t2 = _context5[\"catch\"](3);\n\n              if (!(--tries === 0)) {\n                _context5.next = 28;\n                break;\n              }\n\n              throw _context5.t2;\n\n            case 28:\n              _context5.next = 2;\n              break;\n\n            case 30:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[3, 24]]);\n    }));\n    return _get.apply(this, arguments);\n  }\n\n  return {\n    url: cosmosRESTURL,\n    // meta\n    connected: function connected() {\n      return this.nodeVersion().then(function () {\n        return true;\n      }, function () {\n        return false;\n      });\n    },\n    nodeVersion: function nodeVersion() {\n      return fetch(cosmosRESTURL + \"/node_version\").then(function (res) {\n        return res.text();\n      });\n    },\n    // coins\n    account: function account(address) {\n      var emptyAccount = {\n        coins: [],\n        sequence: \"0\",\n        account_number: \"0\"\n      };\n      return get(\"/auth/accounts/\".concat(address)).then(function (res) {\n        // HACK, hope for: https://github.com/cosmos/cosmos-sdk/issues/3885\n        var account = res.value || emptyAccount;\n\n        if (res.type === \"auth/DelayedVestingAccount\") {\n          if (!account.BaseVestingAccount) {\n            console.error(\"SDK format of vesting accounts responses has changed\");\n            return emptyAccount;\n          }\n\n          account = Object.assign({}, account.BaseVestingAccount.BaseAccount, account.BaseVestingAccount);\n          delete account.BaseAccount;\n          delete account.BaseVestingAccount;\n        }\n\n        return account;\n      })[\"catch\"](function (err) {\n        // if account not found, return null instead of throwing\n        if (err.response && (err.response.data.includes(\"account bytes are empty\") || err.response.data.includes(\"failed to prove merkle proof\"))) {\n          return emptyAccount;\n        }\n\n        throw err;\n      });\n    },\n    txs: function txs(addr, paginationOptions) {\n      return get(\"/txs?message.sender=\".concat(addr), paginationOptions);\n    },\n    bankTxs: function bankTxs(addr, paginationOptions) {\n      return Promise.all([get(\"/txs?message.sender=\".concat(addr), paginationOptions), get(\"/txs?message.recipient=\".concat(addr), paginationOptions)]).then(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            senderTxs = _ref2[0],\n            recipientTxs = _ref2[1];\n\n        return [].concat(senderTxs, recipientTxs);\n      });\n    },\n    txsByHeight: function txsByHeight(height, paginationOptions) {\n      return get(\"/txs?tx.height=\".concat(height), paginationOptions);\n    },\n    tx: function tx(hash) {\n      return get(\"/txs/\".concat(hash));\n    },\n\n    /* ============ STAKE ============ */\n    stakingTxs: function () {\n      var _stakingTxs = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(address, valAddress, paginationOptions) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", Promise.all([get(\"/txs?message.action=create_validator&message.destination-validator=\".concat(valAddress), paginationOptions), get(\"/txs?message.action=edit_validator&message.destination-validator=\".concat(valAddress), paginationOptions), get(\"/txs?message.action=delegate&message.delegator=\".concat(address)), get(\"/txs?message.action=begin_redelegate&message.delegator=\".concat(address), paginationOptions), get(\"/txs?message.action=begin_unbonding&message.delegator=\".concat(address), paginationOptions), get(\"/txs?message.action=unjail&message.source-validator=\".concat(valAddress), paginationOptions)]).then(function (_ref3) {\n                  var _ref4 = _slicedToArray(_ref3, 6),\n                      createValidatorTxs = _ref4[0],\n                      editValidatorTxs = _ref4[1],\n                      delegationTxs = _ref4[2],\n                      redelegationTxs = _ref4[3],\n                      undelegationTxs = _ref4[4],\n                      unjailTxs = _ref4[5];\n\n                  return [].concat(createValidatorTxs, editValidatorTxs, delegationTxs, redelegationTxs, undelegationTxs, unjailTxs);\n                }));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function stakingTxs(_x2, _x3, _x4) {\n        return _stakingTxs.apply(this, arguments);\n      }\n\n      return stakingTxs;\n    }(),\n    // Get all delegations information from a delegator\n    delegations: function delegations(addr) {\n      return get(\"/staking/delegators/\".concat(addr, \"/delegations\"));\n    },\n    undelegations: function undelegations(addr) {\n      return get(\"/staking/delegators/\".concat(addr, \"/unbonding_delegations\"), true);\n    },\n    redelegations: function redelegations(addr) {\n      return get(\"/staking/redelegations?delegator=\".concat(addr));\n    },\n    // Query all validators that a delegator is bonded to\n    delegatorValidators: function delegatorValidators(delegatorAddr) {\n      return get(\"/staking/delegators/\".concat(delegatorAddr, \"/validators\"));\n    },\n    // Get a list containing all the validator candidates\n    validators: function validators() {\n      return Promise.all([get(\"/staking/validators?status=unbonding\"), get(\"/staking/validators?status=bonded\"), get(\"/staking/validators?status=unbonded\")]).then(function (validatorGroups) {\n        var _ref5;\n\n        return (_ref5 = []).concat.apply(_ref5, _toConsumableArray(validatorGroups));\n      });\n    },\n    // Get information from a validator\n    validator: function validator(addr) {\n      return get(\"/staking/validators/\".concat(addr));\n    },\n    // Get the list of the validators in the latest validator set\n    validatorSet: function validatorSet() {\n      return get(\"/validatorsets/latest\");\n    },\n    // Query a delegation between a delegator and a validator\n    delegation: function delegation(delegatorAddr, validatorAddr) {\n      return get(\"/staking/delegators/\".concat(delegatorAddr, \"/delegations/\").concat(validatorAddr), true);\n    },\n    unbondingDelegation: function unbondingDelegation(delegatorAddr, validatorAddr) {\n      return get(\"/staking/delegators/\".concat(delegatorAddr, \"/unbonding_delegations/\").concat(validatorAddr), true);\n    },\n    pool: function pool() {\n      return get(\"/staking/pool\");\n    },\n    stakingParameters: function stakingParameters() {\n      return get(\"/staking/parameters\");\n    },\n\n    /* ============ Slashing ============ */\n    validatorSigningInfo: function validatorSigningInfo(pubKey) {\n      return get(\"/slashing/validators/\".concat(pubKey, \"/signing_info\"));\n    },\n    validatorSigningInfos: function validatorSigningInfos() {\n      return get(\"/slashing/signing_infos\");\n    },\n\n    /* ============ Governance ============ */\n    proposals: function proposals() {\n      return get(\"/gov/proposals\");\n    },\n    proposal: function proposal(proposalId) {\n      return get(\"/gov/proposals/\".concat(proposalId));\n    },\n    proposer: function proposer(proposalId) {\n      return get(\"/gov/proposals/\".concat(proposalId, \"/proposer\"));\n    },\n    proposalVotes: function proposalVotes(proposalId) {\n      return get(\"/gov/proposals/\".concat(proposalId, \"/votes\"));\n    },\n    proposalVote: function proposalVote(proposalId, address) {\n      return get(\"/gov/proposals/\".concat(proposalId, \"/votes/\").concat(address));\n    },\n    proposalDeposits: function proposalDeposits(proposalId) {\n      return get(\"/gov/proposals/\".concat(proposalId, \"/deposits\"));\n    },\n    proposalDeposit: function proposalDeposit(proposalId, address) {\n      return get(\"/gov/proposals/\".concat(proposalId, \"/deposits/\").concat(address), true);\n    },\n    proposalTally: function proposalTally(proposalId) {\n      return get(\"/gov/proposals/\".concat(proposalId, \"/tally\"));\n    },\n    govDepositParameters: function govDepositParameters() {\n      return get(\"/gov/parameters/deposit\");\n    },\n    govTallyingParameters: function govTallyingParameters() {\n      return get(\"/gov/parameters/tallying\");\n    },\n    govVotingParameters: function govVotingParameters() {\n      return get(\"/gov/parameters/voting\");\n    },\n    governanceTxs: function () {\n      var _governanceTxs = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(address) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", Promise.all([get(\"/txs?message.action=submit_proposal&message.proposer=\".concat(address)), get(\"/txs?message.action=deposit&message.depositor=\".concat(address)), get(\"/txs?message.action=vote&message.voter=\".concat(address))]).then(function (_ref6) {\n                  var _ref7 = _slicedToArray(_ref6, 3),\n                      submitProposalTxs = _ref7[0],\n                      depositTxs = _ref7[1],\n                      voteTxs = _ref7[2];\n\n                  return [].concat(submitProposalTxs, depositTxs, voteTxs);\n                }));\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function governanceTxs(_x5) {\n        return _governanceTxs.apply(this, arguments);\n      }\n\n      return governanceTxs;\n    }(),\n\n    /* ============ Explorer ============ */\n    block: function block(blockHeight) {\n      return get(\"/blocks/\".concat(blockHeight));\n    },\n\n    /* ============ Distribution ============ */\n    distributionTxs: function () {\n      var _distributionTxs = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(address, valAddress) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", Promise.all([get(\"/txs?message.action=set_withdraw_address&message.delegator=\".concat(address)), get(\"/txs?message.action=withdraw_delegator_reward&message.delegator=\".concat(address)), get(\"/txs?message.action=withdraw_validator_rewards_all&message.source-validator=\".concat(valAddress))]).then(function (_ref8) {\n                  var _ref9 = _slicedToArray(_ref8, 3),\n                      updateWithdrawAddressTxs = _ref9[0],\n                      withdrawDelegationRewardsTxs = _ref9[1],\n                      withdrawValidatorCommissionTxs = _ref9[2];\n\n                  return [].concat(updateWithdrawAddressTxs, withdrawDelegationRewardsTxs, withdrawValidatorCommissionTxs);\n                }));\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function distributionTxs(_x6, _x7) {\n        return _distributionTxs.apply(this, arguments);\n      }\n\n      return distributionTxs;\n    }(),\n    delegatorRewards: function delegatorRewards(delegatorAddr) {\n      return get(\"/distribution/delegators/\".concat(delegatorAddr, \"/rewards\"));\n    },\n    delegatorRewardsFromValidator: function () {\n      var _delegatorRewardsFromValidator = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(delegatorAddr, validatorAddr) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return get(\"/distribution/delegators/\".concat(delegatorAddr, \"/rewards/\").concat(validatorAddr));\n\n              case 2:\n                _context4.t0 = _context4.sent;\n\n                if (_context4.t0) {\n                  _context4.next = 5;\n                  break;\n                }\n\n                _context4.t0 = [];\n\n              case 5:\n                return _context4.abrupt(\"return\", _context4.t0);\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function delegatorRewardsFromValidator(_x8, _x9) {\n        return _delegatorRewardsFromValidator.apply(this, arguments);\n      }\n\n      return delegatorRewardsFromValidator;\n    }(),\n    validatorDistributionInformation: function validatorDistributionInformation(validatorAddr) {\n      return get(\"/distribution/validators/\".concat(validatorAddr));\n    },\n    validatorRewards: function validatorRewards(validatorAddr) {\n      return get(\"/distribution/validators/\".concat(validatorAddr, \"/rewards\"));\n    },\n    distributionParameters: function distributionParameters() {\n      return get(\"/distribution/parameters\");\n    },\n    distributionOutstandingRewards: function distributionOutstandingRewards() {\n      return get(\"/distribution/outstanding_rewards\");\n    },\n    annualProvisionedTokens: function annualProvisionedTokens() {\n      return get(\"/minting/annual-provisions\");\n    },\n    inflation: function inflation() {\n      return get(\"/minting/inflation\");\n    },\n    mintingParameters: function mintingParameters() {\n      return get(\"/minting/parameters\");\n    }\n  };\n}","import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n// Modifications copyright (C) 2019 Commonwealth Labs\nimport _Getters from './getters';\nimport _send from './send';\nimport _simulate from './simulate';\nimport * as MessageConstructors from './messages';\n/*\n* Sender object to build and send transactions\n* Example:\n* const cosmos = Cosmos(\"https://stargate.lunie.io\", \"cosmos1abcd1234\")\n* const msg = cosmos\n* .MsgSend({toAddress: 'cosmos1abcd09876', amounts: [{ denom: 'stake', amount: 10 }})\n* const gasEstimate = await msg.simulate()\n* const ledgerSigner = ... // async (signMessage: string) => { signature: Buffer, publicKey: Buffer }\n* const { included }= await msg.send({ gas: gasEstimate }, ledgerSigner)\n* await included()\n*/\n\nvar Cosmos =\n/*#__PURE__*/\nfunction () {\n  function Cosmos(cosmosRESTURL) {\n    var _this = this;\n\n    var chainId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n    _classCallCheck(this, Cosmos);\n\n    this.url = cosmosRESTURL;\n    this.get = {};\n    this.accounts = {}; // storing sequence numbers to not send two transactions with the same sequence number\n\n    this.chainId = chainId;\n\n    var getters = _Getters(cosmosRESTURL);\n\n    Object.keys(getters).forEach(function (getter) {\n      _this.get[getter] = getters[getter];\n    }); // add message constructors to the Sender to provide a simple API\n\n    Object.entries(MessageConstructors).forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          name = _ref2[0],\n          messageConstructor = _ref2[1];\n\n      _this[name] = function (senderAddress, args) {\n        var _this2 = this;\n\n        var message = messageConstructor(senderAddress, args);\n        return {\n          message: message,\n          simulate: function simulate(_ref3) {\n            var _ref3$memo = _ref3.memo,\n                memo = _ref3$memo === void 0 ? undefined : _ref3$memo;\n            return _this2.simulate(senderAddress, {\n              message: message,\n              memo: memo\n            });\n          },\n          send: function send(_ref4, signer) {\n            var gas = _ref4.gas,\n                gasPrices = _ref4.gasPrices,\n                _ref4$memo = _ref4.memo,\n                memo = _ref4$memo === void 0 ? undefined : _ref4$memo;\n            return _this2.send(senderAddress, {\n              gas: gas,\n              gasPrices: gasPrices,\n              memo: memo\n            }, message, signer);\n          }\n        };\n      };\n    });\n\n    this.MultiMessage = function (senderAddress) {\n      var _ref5,\n          _this3 = this;\n\n      for (var _len = arguments.length, messageObjects = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        messageObjects[_key - 1] = arguments[_key];\n      }\n\n      var allMessageObjects = (_ref5 = []).concat.apply(_ref5, messageObjects);\n\n      var messages = allMessageObjects.map(function (_ref6) {\n        var message = _ref6.message;\n        return message;\n      });\n      return {\n        messages: messages,\n        simulate: function simulate(_ref7) {\n          var _ref7$memo = _ref7.memo,\n              memo = _ref7$memo === void 0 ? undefined : _ref7$memo;\n          return _this3.simulate(senderAddress, {\n            message: messages[0],\n            memo: memo\n          });\n        },\n        // TODO include actual mutli message simulation\n        send: function send(_ref8, signer) {\n          var gas = _ref8.gas,\n              gasPrices = _ref8.gasPrices,\n              _ref8$memo = _ref8.memo,\n              memo = _ref8$memo === void 0 ? undefined : _ref8$memo;\n          return _this3.send(senderAddress, {\n            gas: gas,\n            gasPrices: gasPrices,\n            memo: memo\n          }, messages, signer);\n        }\n      };\n    };\n  }\n\n  _createClass(Cosmos, [{\n    key: \"setChainId\",\n    value: function () {\n      var _setChainId = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var chainId,\n            _ref9,\n            latestChainId,\n            _args = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                chainId = _args.length > 0 && _args[0] !== undefined ? _args[0] : this.chainId;\n\n                if (chainId) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _context.next = 4;\n                return this.get.block('latest');\n\n              case 4:\n                _ref9 = _context.sent;\n                latestChainId = _ref9.block_meta.header.chain_id;\n                chainId = latestChainId;\n\n              case 7:\n                this.chainId = chainId;\n                return _context.abrupt(\"return\", chainId);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function setChainId() {\n        return _setChainId.apply(this, arguments);\n      }\n\n      return setChainId;\n    }()\n  }, {\n    key: \"getAccount\",\n    value: function () {\n      var _getAccount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(senderAddress) {\n        var _ref10, sequence, accountNumber;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.get.account(senderAddress);\n\n              case 2:\n                _ref10 = _context2.sent;\n                sequence = _ref10.sequence;\n                accountNumber = _ref10.account_number;\n                this.accounts[senderAddress] = {\n                  // prevent downgrading a sequence number as we assume we send a transaction that hasn't affected the remote sequence number yet\n                  sequence: this.accounts[senderAddress] && sequence < this.accounts[senderAddress].sequence ? this.accounts[senderAddress].sequence : sequence,\n                  accountNumber: accountNumber\n                };\n                return _context2.abrupt(\"return\", this.accounts[senderAddress]);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getAccount(_x) {\n        return _getAccount.apply(this, arguments);\n      }\n\n      return getAccount;\n    }()\n    /*\n    * message: object\n    * signer: async (signMessage: string) => { signature: Buffer, publicKey: Buffer }\n    */\n\n  }, {\n    key: \"send\",\n    value: function () {\n      var _send2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(senderAddress, _ref11, messages, signer) {\n        var gas, gasPrices, memo, chainId, _ref12, sequence, accountNumber, _ref13, hash, included;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                gas = _ref11.gas, gasPrices = _ref11.gasPrices, memo = _ref11.memo;\n                _context3.next = 3;\n                return this.setChainId();\n\n              case 3:\n                chainId = _context3.sent;\n                _context3.next = 6;\n                return this.getAccount(senderAddress);\n\n              case 6:\n                _ref12 = _context3.sent;\n                sequence = _ref12.sequence;\n                accountNumber = _ref12.accountNumber;\n                _context3.next = 11;\n                return _send({\n                  gas: gas,\n                  gasPrices: gasPrices,\n                  memo: memo\n                }, messages, signer, this.url, chainId, accountNumber, sequence);\n\n              case 11:\n                _ref13 = _context3.sent;\n                hash = _ref13.hash;\n                included = _ref13.included;\n                this.accounts[senderAddress].sequence = (parseInt(this.accounts[senderAddress].sequence) + 1).toString();\n                return _context3.abrupt(\"return\", {\n                  hash: hash,\n                  sequence: sequence,\n                  included: included\n                });\n\n              case 16:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function send(_x2, _x3, _x4, _x5) {\n        return _send2.apply(this, arguments);\n      }\n\n      return send;\n    }()\n  }, {\n    key: \"simulate\",\n    value: function () {\n      var _simulate2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(senderAddress, _ref14) {\n        var message, _ref14$memo, memo, chainId, _ref15, sequence, accountNumber;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                message = _ref14.message, _ref14$memo = _ref14.memo, memo = _ref14$memo === void 0 ? undefined : _ref14$memo;\n                _context4.next = 3;\n                return this.setChainId();\n\n              case 3:\n                chainId = _context4.sent;\n                _context4.next = 6;\n                return this.getAccount(senderAddress);\n\n              case 6:\n                _ref15 = _context4.sent;\n                sequence = _ref15.sequence;\n                accountNumber = _ref15.accountNumber;\n                return _context4.abrupt(\"return\", _simulate(this.url, senderAddress, chainId, message, memo, sequence, accountNumber));\n\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function simulate(_x6, _x7) {\n        return _simulate2.apply(this, arguments);\n      }\n\n      return simulate;\n    }()\n  }]);\n\n  return Cosmos;\n}();\n\nexport { Cosmos as default };\nexport { createSignedTransaction, createStdTx } from './send';\nexport { createSignMessage } from './signature';","// Bank\nexport function MsgSend(senderAddress, _ref) {\n  var toAddress = _ref.toAddress,\n      amounts = _ref.amounts;\n  return {\n    type: \"cosmos-sdk/MsgSend\",\n    value: {\n      from_address: senderAddress,\n      to_address: toAddress,\n      amount: amounts.map(Coin)\n    }\n  };\n} // Staking\n\nexport function MsgDelegate(senderAddress, _ref2) {\n  var validatorAddress = _ref2.validatorAddress,\n      amount = _ref2.amount,\n      denom = _ref2.denom;\n  return {\n    type: \"cosmos-sdk/MsgDelegate\",\n    value: {\n      delegator_address: senderAddress,\n      validator_address: validatorAddress,\n      amount: Coin({\n        amount: amount,\n        denom: denom\n      })\n    }\n  };\n}\nexport function MsgUndelegate(senderAddress, _ref3) {\n  var validatorAddress = _ref3.validatorAddress,\n      amount = _ref3.amount,\n      denom = _ref3.denom;\n  return {\n    type: \"cosmos-sdk/MsgUndelegate\",\n    value: {\n      validator_address: validatorAddress,\n      delegator_address: senderAddress,\n      amount: Coin({\n        amount: amount,\n        denom: denom\n      })\n    }\n  };\n}\nexport function MsgRedelegate(senderAddress, _ref4) {\n  var validatorSourceAddress = _ref4.validatorSourceAddress,\n      validatorDestinationAddress = _ref4.validatorDestinationAddress,\n      amount = _ref4.amount,\n      denom = _ref4.denom;\n  return {\n    type: \"cosmos-sdk/MsgBeginRedelegate\",\n    value: {\n      delegator_address: senderAddress,\n      validator_src_address: validatorSourceAddress,\n      validator_dst_address: validatorDestinationAddress,\n      amount: Coin({\n        amount: amount,\n        denom: denom\n      })\n    }\n  };\n} // Governance\n\nexport function MsgSubmitProposal(senderAddress, _ref5) {\n  var proposalType = _ref5.proposalType,\n      title = _ref5.title,\n      description = _ref5.description,\n      initialDeposits = _ref5.initialDeposits;\n  return {\n    type: \"cosmos-sdk/MsgSubmitProposal\",\n    value: {\n      content: {\n        type: 'cosmos-sdk/TextProposal',\n        value: {\n          title: title,\n          description: description\n        }\n      },\n      proposer: senderAddress,\n      initial_deposit: initialDeposits.map(Coin)\n    }\n  };\n}\nexport function MsgVote(senderAddress, _ref6) {\n  var proposalId = _ref6.proposalId,\n      option = _ref6.option;\n  return {\n    type: \"cosmos-sdk/MsgVote\",\n    value: {\n      voter: senderAddress,\n      proposal_id: proposalId,\n      option: option\n    }\n  };\n}\nexport function MsgDeposit(senderAddress, _ref7) {\n  var proposalId = _ref7.proposalId,\n      amounts = _ref7.amounts;\n  return {\n    type: \"cosmos-sdk/MsgDeposit\",\n    value: {\n      depositor: senderAddress,\n      proposal_id: proposalId,\n      amount: amounts.map(Coin)\n    }\n  };\n}\nexport function MsgWithdrawDelegationReward(senderAddress, _ref8) {\n  var validatorAddress = _ref8.validatorAddress;\n  return {\n    type: \"cosmos-sdk/MsgWithdrawDelegationReward\",\n    value: {\n      delegator_address: senderAddress,\n      validator_address: validatorAddress\n    }\n  };\n}\n\nfunction Coin(_ref9) {\n  var amount = _ref9.amount,\n      denom = _ref9.denom;\n  return {\n    amount: String(amount),\n    denom: denom\n  };\n}\n\nexport default {\n  'MsgSend': MsgSend,\n  'MsgDelegate': MsgDelegate,\n  'MsgUndelegate': MsgUndelegate,\n  'MsgRedelegate': MsgRedelegate,\n  'MsgSubmitProposal': MsgSubmitProposal,\n  'MsgVote': MsgVote,\n  'MsgDeposit': MsgDeposit,\n  'MsgWithdrawDelegationReward': MsgWithdrawDelegationReward\n};","import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\n\n/* eslint-env browser */\nimport { createSignMessage, createSignature } from './signature';\nvar DEFAULT_GAS_PRICE = [{\n  amount: 2.5e-8.toFixed(9),\n  denom: \"uatom\"\n}];\nexport default function send(_x, _x2, _x3, _x4, _x5, _x6, _x7) {\n  return _send.apply(this, arguments);\n}\n\nfunction _send() {\n  _send = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref, messages, signer, cosmosRESTURL, chainId, accountNumber, sequence) {\n    var gas, _ref$gasPrices, gasPrices, _ref$memo, memo, signedTx, body, res;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            gas = _ref.gas, _ref$gasPrices = _ref.gasPrices, gasPrices = _ref$gasPrices === void 0 ? DEFAULT_GAS_PRICE : _ref$gasPrices, _ref$memo = _ref.memo, memo = _ref$memo === void 0 ? \"\" : _ref$memo;\n            _context.next = 3;\n            return createSignedTransaction({\n              gas: gas,\n              gasPrices: gasPrices,\n              memo: memo\n            }, messages, signer, chainId, accountNumber, sequence);\n\n          case 3:\n            signedTx = _context.sent;\n            // broadcast transaction with signatures included\n            body = createBroadcastBody(signedTx, \"sync\");\n            _context.next = 7;\n            return fetch(\"\".concat(cosmosRESTURL, \"/txs\"), {\n              method: \"POST\",\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: body\n            }).then(function (res) {\n              return res.json();\n            }).then(assertOk);\n\n          case 7:\n            res = _context.sent;\n            return _context.abrupt(\"return\", {\n              hash: res.txhash,\n              sequence: sequence,\n              included: function included() {\n                return queryTxInclusion(res.txhash, cosmosRESTURL);\n              }\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _send.apply(this, arguments);\n}\n\nexport function createSignedTransaction(_x8, _x9, _x10, _x11, _x12, _x13) {\n  return _createSignedTransaction.apply(this, arguments);\n} // wait for inclusion of a tx in a block\n// Default waiting time: 60 * 3s = 180s\n\nfunction _createSignedTransaction() {\n  _createSignedTransaction = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(_ref2, messages, signer, chainId, accountNumber, sequence) {\n    var gas, _ref2$gasPrices, gasPrices, _ref2$memo, memo, stdTx, signMessage, signature, publicKey, _ref6, signatureObject, signedTx;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            gas = _ref2.gas, _ref2$gasPrices = _ref2.gasPrices, gasPrices = _ref2$gasPrices === void 0 ? DEFAULT_GAS_PRICE : _ref2$gasPrices, _ref2$memo = _ref2.memo, memo = _ref2$memo === void 0 ? \"\" : _ref2$memo;\n            // sign transaction\n            stdTx = createStdTx({\n              gas: gas,\n              gasPrices: gasPrices,\n              memo: memo\n            }, messages);\n            signMessage = createSignMessage(stdTx, {\n              sequence: sequence,\n              accountNumber: accountNumber,\n              chainId: chainId\n            });\n            _context2.prev = 3;\n            _context2.next = 6;\n            return signer(signMessage);\n\n          case 6:\n            _ref6 = _context2.sent;\n            signature = _ref6.signature;\n            publicKey = _ref6.publicKey;\n            _context2.next = 14;\n            break;\n\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2[\"catch\"](3);\n            throw new Error('Signing failed: ' + _context2.t0.message);\n\n          case 14:\n            signatureObject = createSignature(signature, sequence, accountNumber, publicKey);\n            signedTx = createSignedTransactionObject(stdTx, signatureObject);\n            return _context2.abrupt(\"return\", signedTx);\n\n          case 17:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[3, 11]]);\n  }));\n  return _createSignedTransaction.apply(this, arguments);\n}\n\nexport function queryTxInclusion(_x14, _x15) {\n  return _queryTxInclusion.apply(this, arguments);\n} // attaches the request meta data to the message\n\nfunction _queryTxInclusion() {\n  _queryTxInclusion = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(txHash, cosmosRESTURL) {\n    var iterations,\n        timeout,\n        includedTx,\n        _args3 = arguments;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            iterations = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : 60;\n            timeout = _args3.length > 3 && _args3[3] !== undefined ? _args3[3] : 3000;\n\n          case 2:\n            if (!(iterations-- > 0)) {\n              _context3.next = 16;\n              break;\n            }\n\n            _context3.prev = 3;\n            _context3.next = 6;\n            return fetch(\"\".concat(cosmosRESTURL, \"/txs/\").concat(txHash)).then(function (response) {\n              if (response.status >= 200 && response.status < 300) {\n                return Promise.resolve(response.json());\n              } else {\n                var error = new Error(response.statusText || response.status);\n                error.response = response;\n                return Promise.reject(error);\n              }\n            });\n\n          case 6:\n            includedTx = _context3.sent;\n            return _context3.abrupt(\"break\", 16);\n\n          case 10:\n            _context3.prev = 10;\n            _context3.t0 = _context3[\"catch\"](3);\n            _context3.next = 14;\n            return new Promise(function (resolve) {\n              return setTimeout(resolve, timeout);\n            });\n\n          case 14:\n            _context3.next = 2;\n            break;\n\n          case 16:\n            if (!(iterations <= 0)) {\n              _context3.next = 18;\n              break;\n            }\n\n            throw new Error(\"The transaction was still not included in a block. We can't say for certain it will be included in the future.\");\n\n          case 18:\n            assertOk(includedTx);\n            return _context3.abrupt(\"return\", includedTx);\n\n          case 20:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[3, 10]]);\n  }));\n  return _queryTxInclusion.apply(this, arguments);\n}\n\nexport function createStdTx(_ref3, messages) {\n  var gas = _ref3.gas,\n      gasPrices = _ref3.gasPrices,\n      memo = _ref3.memo;\n  var fees = gasPrices.map(function (_ref4) {\n    var amount = _ref4.amount,\n        denom = _ref4.denom;\n    return {\n      amount: String(Math.round(amount * gas)),\n      denom: denom\n    };\n  }).filter(function (_ref5) {\n    var amount = _ref5.amount;\n    return amount > 0;\n  });\n  return {\n    msg: Array.isArray(messages) ? messages : [messages],\n    fee: {\n      amount: fees.length > 0 ? fees : null,\n      gas: gas\n    },\n    signatures: null,\n    memo: memo\n  };\n} // the broadcast body consists of the signed tx and a return type\n// returnType can be block (inclusion in block), async (right away), sync (after checkTx has passed)\n\nfunction createBroadcastBody(signedTx) {\n  var returnType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"sync\";\n  return JSON.stringify({\n    tx: signedTx,\n    mode: returnType\n  });\n} // adds the signature object to the tx\n\n\nfunction createSignedTransactionObject(tx, signature) {\n  return Object.assign({}, tx, {\n    signatures: [signature]\n  });\n} // assert that a transaction was sent successful\n\n\nfunction assertOk(res) {\n  if (Array.isArray(res)) {\n    if (res.length === 0) throw new Error(\"Error sending transaction\");\n    res.forEach(assertOk);\n  }\n\n  if (res.error) {\n    throw new Error(res.error);\n  } // Sometimes we get back failed transactions, which shows only by them having a `code` property\n\n\n  if (res.code) {\n    var message = JSON.parse(res.raw_log).message;\n    throw new Error(message);\n  }\n\n  if (!res.txhash) {\n    var _message = res.message;\n    throw new Error(_message);\n  }\n\n  return res;\n}","/*\nThe SDK expects a certain message format to serialize and then sign.\n\ntype StdSignMsg struct {\n  ChainID       string      `json:\"chain_id\"`\n  AccountNumber uint64      `json:\"account_number\"`\n  Sequence      uint64      `json:\"sequence\"`\n  Fee           auth.StdFee `json:\"fee\"`\n  Msgs          []sdk.Msg   `json:\"msgs\"`\n  Memo          string      `json:\"memo\"`\n}\n*/\nexport function createSignMessage(jsonTx, _ref) {\n  var sequence = _ref.sequence,\n      accountNumber = _ref.accountNumber,\n      chainId = _ref.chainId;\n  // sign bytes need amount to be an array\n  var fee = {\n    amount: jsonTx.fee.amount || [],\n    gas: jsonTx.fee.gas\n  };\n  return JSON.stringify(removeEmptyProperties({\n    fee: fee,\n    memo: jsonTx.memo,\n    msgs: jsonTx.msg,\n    // weird msg vs. msgs\n    sequence: sequence,\n    account_number: accountNumber,\n    chain_id: chainId\n  }));\n}\nexport function createSignature(signature, sequence, accountNumber, publicKey) {\n  return {\n    signature: signature.toString(\"base64\"),\n    account_number: accountNumber,\n    sequence: sequence,\n    pub_key: {\n      type: \"tendermint/PubKeySecp256k1\",\n      // TODO: allow other keytypes\n      value: publicKey.toString(\"base64\")\n    }\n  };\n}\nexport function removeEmptyProperties(jsonTx) {\n  if (Array.isArray(jsonTx)) {\n    return jsonTx.map(removeEmptyProperties);\n  } // string or number\n\n\n  if (typeof jsonTx !== \"object\") {\n    return jsonTx;\n  }\n\n  var sorted = {};\n  Object.keys(jsonTx).sort().forEach(function (key) {\n    if (jsonTx[key] === undefined || jsonTx[key] === null) return;\n    sorted[key] = removeEmptyProperties(jsonTx[key]);\n  });\n  return sorted;\n}","import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* eslint-env browser */\nvar GAS_ADJUSTMENT = 2.3;\nexport default function simulate(_x, _x2, _x3, _x4, _x5, _x6, _x7) {\n  return _simulate.apply(this, arguments);\n} // attaches the request meta data to the message\n\nfunction _simulate() {\n  _simulate = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(cosmosRESTURL, senderAddress, chainId, msg, memo, sequence, accountNumber) {\n    var type, path, url, fixedMessage, tx, _ref2, gasEstimate;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            type = msg.type;\n            path = {\n              'cosmos-sdk/MsgSend': function cosmosSdkMsgSend() {\n                return \"/bank/accounts/\".concat(senderAddress, \"/transfers\");\n              },\n              'cosmos-sdk/MsgDelegate': function cosmosSdkMsgDelegate() {\n                return \"/staking/delegators/\".concat(senderAddress, \"/delegations\");\n              },\n              'cosmos-sdk/MsgUndelegate': function cosmosSdkMsgUndelegate() {\n                return \"/staking/delegators/\".concat(senderAddress, \"/unbonding_delegations\");\n              },\n              'cosmos-sdk/MsgBeginRedelegate': function cosmosSdkMsgBeginRedelegate() {\n                return \"/staking/delegators/\".concat(senderAddress, \"/redelegations\");\n              },\n              'cosmos-sdk/MsgSubmitProposal': function cosmosSdkMsgSubmitProposal() {\n                return \"/gov/proposals\";\n              },\n              'cosmos-sdk/MsgVote': function cosmosSdkMsgVote() {\n                return \"/gov/proposals/\".concat(msg.value.proposal_id, \"/votes\");\n              },\n              'cosmos-sdk/MsgDeposit': function cosmosSdkMsgDeposit() {\n                return \"/gov/proposals/\".concat(msg.value.proposal_id, \"/deposits\");\n              },\n              'cosmos-sdk/MsgWithdrawDelegationReward': function cosmosSdkMsgWithdrawDelegationReward() {\n                return \"/distribution/delegators/\".concat(senderAddress, \"/rewards\");\n              }\n            }[type]();\n            url = \"\".concat(cosmosRESTURL).concat(path); // the simulate endpoint is out of sync right now: https://github.com/cosmos/cosmos-sdk/issues/4929\n\n            if (type === 'cosmos-sdk/MsgSubmitProposal') {\n              fixedMessage = {\n                type: 'cosmos-sdk/MsgSubmitProposal',\n                value: {\n                  title: msg.value.content.value.title,\n                  description: msg.value.content.value.description,\n                  proposal_type: 'Text',\n                  proposer: msg.value.proposer,\n                  initial_deposit: msg.value.initial_deposit\n                }\n              };\n              msg = fixedMessage;\n            }\n\n            tx = createRESTPOSTObject(senderAddress, chainId, {\n              sequence: sequence,\n              accountNumber: accountNumber,\n              memo: memo\n            }, msg);\n            _context.next = 7;\n            return fetch(url, {\n              method: \"POST\",\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(tx)\n            }).then(function (res) {\n              return res.json();\n            });\n\n          case 7:\n            _ref2 = _context.sent;\n            gasEstimate = _ref2.gas_estimate;\n            return _context.abrupt(\"return\", Math.round(gasEstimate * GAS_ADJUSTMENT));\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _simulate.apply(this, arguments);\n}\n\nfunction createRESTPOSTObject(senderAddress, chainId, _ref, msg) {\n  var sequence = _ref.sequence,\n      accountNumber = _ref.accountNumber,\n      memo = _ref.memo;\n  var requestMetaData = {\n    sequence: sequence,\n    from: senderAddress,\n    account_number: accountNumber,\n    chain_id: chainId,\n    simulate: true,\n    memo: memo\n  };\n  return _objectSpread({\n    base_req: requestMetaData\n  }, msg.value);\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACVA;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrtbxQA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC3DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;A","sourceRoot":""}